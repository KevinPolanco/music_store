{{> SearchBar}}

<div class="d-flex justify-content-center minHeight mt-5">
  <div id="app"class="container row row-cols-1 mt-5">  </div>
</div>

{{> NavigationButtons}}

{{!-- modal --}}
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div id="modalDisc" class="modal-content">
      
    </div>
  </div>
</div>
<div class="align-items-end">

</div>

<script>
 
  const writeData = (data) => {
    app.innerHTML = ''
    data.forEach((data) => {
      app.innerHTML += `
        <div class="card border-white w-100 mb-3" data-aos="fade-up" data-aos-duration="1500">
          <div class="row g-0">
            <div class="col-md-4">
              <img src="${data.cover}" class="img-fluid rounded-start" alt="...">
            </div>
            <div class="col-md-4 align-self-center">
              <div class="card-body">
                <h5 class="card-title"><b>${data.name}</b></h5>
                <p class="card-text"><b>${data.artist}</b></p>
                <p class="card-text"><p><b>Sello:</b>  ${data.label}<br><b>Lanzamineto:</b> ${data.release_year}<br><b>Genero:</b> ${data.genre}</p>
              </div>
            </div>
            <div class="col-md-4 align-self-center">
              <div class="card-body text-end">
                <h2 class="card-title">$${data.price}</h2>
                <button data-bs-toggle="modal" data-bs-target="#exampleModal" data-update="${data.id}" class="btn btn-warning">Actualizar</button>
                <button data-delete="${data.id}" class="btn btn-danger">Eliminar</button>
              </div>
            </div>
          </div>
        </div>
        <div>
          <hr class="mt-md-5 mb-md-5 " data-aos="fade-up" data-aos-duration="1500">
        </div>
      `
    })
  }

  const writeModal = (data) => {
    modalDisc.innerHTML = '';
    modalDisc.innerHTML += `
      <div class="modal-header">
        <h5 class="text-center">Actualizar datos</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
      <form data-idModal="${data.id}" class=" mt-5">
        <div class="mb-3">
          <label class="form-label">Nombre album</label>
          <input type="text" class="form-control" placeholder="Ingrese nombre album" name="name" value="${data.name}">
        </div>
        <div class="mb-3">
          <label class="form-label">Nombre musico</label>
          <input type="text" class="form-control" placeholder="Ingrese nombre musico" name="artist" value="${data.artist}">
        </div>
        <div class="mb-3">
          <label class="form-label">Genero musical</label>
          <input type="text" class="form-control" placeholder="Ingrese genero" name="genre" value="${data.genre}">
        </div>
        <div class="mb-3">
          <label class="form-label">A침o lanzamineto</label>
          <input type="text" class="form-control" placeholder="Ingrese a침o de lanzamineto" name="release_year" value="${data.release_year}">
        </div>
        <div class="mb-3">
          <label class="form-label">Sello discogr치fico</label>
          <input type="text" class="form-control" placeholder="Ingrese sello discogr치fico" name="label" value="${data.label}">
        </div>
        <div class="mb-3">
          <label class="form-label">Precio</label>
          <input type="text" class="form-control" placeholder="Ingrese precio" name="price" value="${data.price}">
        </div>
        <div class="mb-3">
          <label class="form-label">Url</label>
          <input type="text" class="form-control" placeholder="Ingrese url" name="url" value="${data.url}">
        </div>
        <div id="msg" class="text-center my-2"></div>
          <button type="button" class="btn btn-secondary mt-4" data-bs-dismiss="modal">Cerrar</button>
          <button type="submit" class="btn btn-success mt-4">Actualizar album</button>
      </form>
      </div>
      `
  }

  const writeMsg = (text) => {
    msg.innerHTML = '';
    msg.innerHTML = `<p class="mb-2 mtb-5" style="color: red;">${text}</p>`;
  }

  document.addEventListener("DOMContentLoaded", async() => {
    try{  
      const res = await fetch(`/api/v1/discs?limit=${limit}&offset=${offset}`, {
        headers: {
          Authorization: `Bearer ${localStorage.getItem('token')}`
        }
      })
      const data = await res.json()
      console.log(data)
      if(
          data.msg === 'token does not exist' || 
          data.msg === 'Invalid format use Bearer' || 
          data.msg === 'invalid format' || 
          data.msg === "invalid token" || 
          data.msg === "expired token")
          {
            window.location.href= "login"
        }
      
      if(!data.ok){
        window.location.href= "login"
      }
      if(data.msg === "restricted user"){
        window.location.href= "store"
      }
      golabalDiscs.push(...data.discs)
      
      writeData(data.discs)

      document.addEventListener('click', async(e) => { 
        
        if(e.target.dataset.update){
          const idDiscs = parseInt(e.target.dataset.update)
          const disc = golabalDiscs.find(item => item.id === idDiscs)
          writeModal(disc)
        }

        if(e.target.dataset.delete){
          const idDiscs = parseInt(e.target.dataset.delete)
          const res = await fetch(`/api/v1/discs/${idDiscs}`, {
            method: 'DELETE',
            headers: {
              Authorization: `Bearer ${localStorage.getItem('token')}`,
              "Content-Type": "application/json",
            }
          })
          const resData = await res.json()
          
          if(resData.ok){
            window.location.href= "adminAlbums"
          }
        }
      })

      document.addEventListener('submit', async(e) => {
        e.preventDefault()
        const formData = new FormData(e.target)
        const objectFormData = Object.fromEntries(formData)
        const jsonFormData = JSON.stringify(objectFormData) 
        const idDiscs = parseInt(e.target.dataset.idmodal)
        console.log(idDiscs)
        console.log(jsonFormData)
        const res = await fetch(`/api/v1/discs/${idDiscs}`, {
          method: 'PUT',
          body: jsonFormData, 
          headers: {
            Authorization: `Bearer ${localStorage.getItem('token')}`,
            "Content-Type": "application/json",
          }
        })
        const resData = await res.json()
        console.log(resData)
        
        if(
          resData.msg === 'token does not exist' || 
          resData.msg === 'Invalid format use Bearer' || 
          resData.msg === 'invalid format' || 
          resData.msg === "invalid token" || 
          resData.msg === "expired token")
          {
            window.location.href= "login"
        }

        if(!resData.ok){
          writeMsg(MsgTraductor(resData.msg))
        }

        if(resData.ok){
          window.location.href= "adminAlbums"
        }
      })
    } catch (error) {
      console.log(error)
    }
     
  })

</script>
